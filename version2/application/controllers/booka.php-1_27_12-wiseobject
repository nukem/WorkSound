<?php

if (!defined('BASEPATH'))
  exit('No direct script access allowed');

/**
 * Soundbooka
 * 
 * @author     Chathura Payagala <chathupayagala@gmail.com>
 */
class Booka extends MY_Controller {

  function Booka() {
    parent::__construct();
    $this->load->model('mUser');
    //$this->load->model('mBooka');
	$this->load->model('mBooka');
	$this->load->model('mArticle');
	$this->load->model('mUtil');
  }

  public function index() {
    $data = array(
        'title' => '',
        'main_content' => 'home'
    );
    $this->load->view('template', $data);
  }

  public function registered($id) {
    //send_email('chathupayagala@gmail.com', 'subject', 'message');
    $data = array(
        'title' => 'Registration Complete',
        'main_content' => 'booka/registered',
		'id' => $id
    );
    $this->load->view('template', $data);
  }
  
  public function re_send($id) {
	$this->_sendEmail($id);
	die('OK');  
  }

  public function updateBookaStatus() {
	$status = $_POST['bStatus'];
	$id = $_POST['bId'];
	$sql ="UPDATE `booka` b, user u SET status='{$status}' WHERE b.user_id = u.id && u.`id` ='{$id}'";
    $this->db->query($sql);
	if($status == 'approved')
	{
		$this->sendEmailApproved($id);

	}else if($status == 'reject')
	{
		$this->sendEmailRejected($id);
	}
	
	//die('OK');  
  }  
  // Date: 30 Nov ' 11 EM code starts here
  

  public function register() {
   
//
    //$this->form_validation->set_rules('type', 'Account Type', 'required|trim');
   	$this->form_validation->set_rules('email', 'Email', 'required|trim|valid_email|callback_check_profile');
    $this->form_validation->set_rules('email_confirm', 'Email Confirm', 'required|trim|valid_email');
    $this->form_validation->set_rules('password', 'Password', 'required|trim');
    $this->form_validation->set_rules('password_confirm', 'Password Confirm', 'required|trim');
    $this->form_validation->set_rules('secret_question', 'Secret Question', 'required');
    $this->form_validation->set_rules('secret_answer', 'Secret Answer', 'required');
    $this->form_validation->set_rules('dob_day', 'Birth Day', 'required');
    $this->form_validation->set_rules('dob_month', 'Birth Month', 'required');
    $this->form_validation->set_rules('dob_year', 'Birth Year', 'required');
    $this->form_validation->set_rules('age', 'Age verification', 'required|is_numeric');
    $this->form_validation->set_rules('agree', 'Agree Terms', 'required|is_numeric');

    $this->form_validation->set_error_delimiters('<div class="error">', '</div>');

    if ($this->form_validation->run() == FALSE) {
      $data = array(
          'title' => 'Register',
          'main_content' => 'booka/register'
      );
      $data['form_errors'] = $this->form_validation->error_array();
      $data['types'] = $this->mUtil->getCodes('Account Types');
	  $questions = $this->mUtil->getCodes('Secret Questions');
      foreach ($questions as $s) {
		$data['questions'][$s] = $s;  
	  }
      $this->load->view('template', $data);
    } else {
	  $profile_type = 'booka';
      $form_data = array(
          'id' => 0,
          'email' => set_value('email'),
          'password' => set_value('password'),
          'type' => set_value('type'),
          'secret_question' => set_value('secret_question'),
          'secret_answer' => set_value('secret_answer'),
          'newsletter' => set_value('newsletter'),
          'dob' => set_value('dob_year') . "-" . set_value('dob_month') . "-" . set_value('dob_day'),
		  'profile_type' => $profile_type,
		  'isbooka' => 1
		);
      if ($newID = $this->mUser->save($form_data)) {
       $aid = $this->mBooka->save(array('id' => 0, 'user_id' => $newID),$_POST);
       $this->session->set_flashdata('message', 'You can now complete your profile.');
     	$this->_sendEmail($aid);
	    redirect('/booka/registered/'.$aid);
      
	  } else {
        $this->session->set_flashdata('error', 'An error occurred saving your information. Please try again later');

        $data = array(
            'title' => 'Register',
            'main_content' => 'Booka/register'
        );
        $this->load->view('template', $data);
      }
    }
  }

  function _sendEmail($id) {
    $Booka = $this->mBooka->get($id);
    $user = $this->mUser->get($Booka->user_id);
	$article = $this->mArticle->getEmailTemplate(194220);
	
	  $this->load->library('email');

	  $this->email->from($article->email_from);
	  $this->email->to($user->email);
	  $this->email->cc($article->cc);
	  $this->email->bcc($article->bcc);
	  $this->email->subject($article->subject);
    
		//$profile_link = "<a href='" . base_url() . "Booka/step1/{$id}'>Create my profile</a>";
		$profile_link = "<a href='" . base_url() . "booka/step1/{$id}'>Create my profile</a>";
	
	$html = '<html>
<head>
</head>
<body>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td align="center" valign="top"><table width="639" border="0" cellspacing="0" cellpadding="0">
      <tr>
        <td><img src="http://www.soundbooka.com/version1/images/email_head.jpg" width="639" height="143" /></td>
      </tr>
      <tr>
        <td style="padding-top:30px; padding-left:20px;padding-bottom:20px;padding-right:10px;color: #332B28; font-family:Lato,Arial,Helvetica,sans-serif; font-size: 14px;">' . str_replace('%Create my profile%',$profile_link,$article->content) . '</td>
      </tr>
      <tr>
        <td><img src="http://www.soundbooka.com/version1/images/email_footer.jpg" width="639" height="83" border="0" usemap="#Map" /></td>
      </tr>
    </table></td>
  </tr>
</table>

<map name="Map" id="Map">
  <area shape="rect" coords="9,4,28,24" href="http://www.facebook.com/soundbooka" target="_blank" />
  <area shape="rect" coords="30,4,51,25" href="http://www.twitter.com/soundbooka" target="_blank" />
  <area shape="rect" coords="4,30,636,78" href="http://www.soundbooka.com/version1/" />
</map>
</body>
</html>';
	
    $body = $html ;
	
    $this->email->message($body);
    //$this->email->send();

    send_email($user->email, $article->subject, $body);

    return;
  }
  
    function sendEmailApproved($id) 
	{
		$Booka = $this->mBooka->get($id);
		$user = $this->mUser->get($Booka->user_id);
		$article = $this->mArticle->getEmailTemplate(194220);
   
		$profile_link = "<a href='" . base_url() . "profile/view/{$id}'>here</a>";
		
	$html = "<html>
<head>
</head>
<body>
<table width=\"100%\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">
  <tr>
    <td align=\"center\" valign=\"top\"><table width=\"639\" border=\"0\" cellspacing=\"0\" cellpadding=\"0\">
      <tr>
        <td><img src=\"http://www.soundbooka.com/version1/images/email_head.jpg\" width=\"639\" 
		height=\"143\" /></td>
      </tr>
      <tr>
        <td style=\"padding-top:30px; padding-left:20px;padding-bottom:20px;padding-right:10px;color: #332B28; font-family:Lato,Arial,Helvetica,sans-serif; font-size: 14px;\">Hi!<br/><br/>Soundbooka are pleased to inform you that your Profile Page has been reviewed and activated. You will now be able to be booked for gigs through <a href=\"www.soundbooka.com\">www.soundbooka.com</a><br/><br/>View your activated Soundbooka Profile Page ".$profile_link."<br/><br/>For more information please contact us at <a href=\"mailto:info@soundbooka.com\">info@soundbooka.com</a><br/><br/>Thanks,<br/><br/>The Soundbooka Team <br/><br/><a href=\"www.soundbooka.com\">www.soundbooka.com</a>
</td>
      </tr>
      <tr>
        <td><img src=\"http://www.soundbooka.com/version1/images/email_footer.jpg\" width=\"639\" height=\"83\" border=\"0\" usemap=\"#Map\" /></td>
      </tr>
    </table></td>
  </tr>
</table>

<map name=\"Map\" id=\"Map\">
  <area shape=\"rect\" coords=\"9,4,28,24\" href=\"http://www.facebook.com/soundbooka\" target=\"_blank\" />
  <area shape=\"rect\" coords=\"30,4,51,25\" href=\"http://www.twitter.com/soundbooka\" target=\"_blank\" />
  <area shape=\"rect\" coords=\"4,30,636,78\" href=\"http://www.soundbooka.com/version1/\" />
</map>
</body>
</html>";

    send_email($user->email, "Welcome to Soundbooka!", $html);
	//die('OK');  
    return;
  }
  
  function sendEmailRejected($id) 
	{
		$Booka = $this->mBooka->get($id);
		$user = $this->mUser->get($Booka->user_id);
		$article = $this->mArticle->getEmailTemplate(194220);
		$this->load->library('email');
		$this->email->from($article->email_from);
		$this->email->to($user->email);
		$this->email->cc($article->cc);
		$this->email->bcc($article->bcc);
		$this->email->subject("Registration Pending");
    
		
	$html = '<html>
<head>
</head>
<body>
<table width="100%" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td align="center" valign="top"><table width="639" border="0" cellspacing="0" cellpadding="0">
      <tr>
        <td><img src="http://www.soundbooka.com/version1/images/email_head.jpg" width="639" height="143" /></td>
      </tr>
      <tr>
        <td style="padding-top:30px; padding-left:20px;padding-bottom:20px;padding-right:10px;color: #332B28; font-family:Lato,Arial,Helvetica,sans-serif; font-size: 14px;">Hi!<br/><br/>Unfortunately your Soundbooka Profile Page will not be activated.<br/><br/>You will be able to register as an Booka on Soundbooka again in three months. For more information please visit the Soundbooka FAQ page <a href="http://www.soundbooka.com/version1/faq">here</a>.<br/><br/>Thanks,<br/><br/>The Soundbooka Team <br/><br/><a href="www.soundbooka.com">www.soundbooka.com</a>    </td>
      </tr>
      <tr>
        <td><img src="http://www.soundbooka.com/version1/images/email_footer.jpg" width="639" height="83" border="0" usemap="#Map" /></td>
      </tr>
    </table></td>
  </tr>
</table>

<map name="Map" id="Map">
  <area shape="rect" coords="9,4,28,24" href="http://www.facebook.com/soundbooka" target="_blank" />
  <area shape="rect" coords="30,4,51,25" href="http://www.twitter.com/soundbooka" target="_blank" />
  <area shape="rect" coords="4,30,636,78" href="http://www.soundbooka.com/version1/" />
</map>
</body>
</html>';
	
    $body = $html ;
	
    $this->email->message($body);
    //$this->email->send();

    send_email($user->email, "Your Soundbooka Profile", $body);
//die('OK');  
    return;
  }

  public function step1($id=0) {
	
	if (!$id) {
      $this->session->set_flashdata('error', 'You have to resigter first.');
      redirect('/booak/register');
    }
	
	if(!empty($_POST)){
		$this->form_validation->set_rules('booka_type', 'Business Type', 'required|trim');
		$this->form_validation->set_rules('address', 'Business Address', 'required|trim');
		$this->form_validation->set_rules('suburb', 'Town/Suburb', 'required|trim');
		$this->form_validation->set_rules('country', 'Country', 'required|trim');
		$this->form_validation->set_rules('state', 'State', 'required|trim');
		$this->form_validation->set_rules('postcode', 'Postcode', 'required');
		$this->form_validation->set_rules('firstname', 'First Name', 'required|trim');
		$this->form_validation->set_rules('lastname', 'Last Name', 'required|trim');
		$this->form_validation->set_rules('phone_code', 'Phone Code', '');
		$this->form_validation->set_rules('primary_phone', 'Phone Number', 'required');
		$this->form_validation->set_rules('alternative_phone', 'Phone Number', '');

	if($_POST['booka_type'] == '1'){
		$booka = 'commerical';
		$this->form_validation->set_rules('business_name', 'Business Name', 'required|trim');
		$this->form_validation->set_rules('abn', 'ABN', 'required|trim');
	}else $booka = 'private';
	
    $this->form_validation->set_error_delimiters('<div class="error">', '</div>');
	
	}
    if ($this->form_validation->run() == FALSE) {
      $data = array(
          'title' => 'Create Profile Step 1',
          'main_content' => 'booka/step1'
      );
      $data['form_errors'] = $this->form_validation->error_array();
      $data = array_merge($data, (array) $this->mBooka->get($id));
	  if (empty($data['id'])) {
		  $this->session->set_flashdata('error', 'Profile does not exist - please try again.');
		  redirect('/booka/register');
	  }

      $data['countries'] = $this->mUtil->getCountryList();
	  $data['states'] = $this->mUtil->getStateList(set_value('country', $data['country']));
	  $data['genders'] = $this->mUtil->getCodes('gender');
	
      //print_r($data);die;
      $this->load->view('template', $data);
    } else {
      $form_data = array(
          'id' => $id,
		  'booka_type' => $booka,
		  'business_name' => set_value('business_name'),
		  'abn' => set_value('abn'),
          'firstname' => set_value('firstname'),
          'lastname' => set_value('lastname'),
          'address' => $this->input->post('address'),
          'suburb' => set_value('suburb'),
          'state' => set_value('state'),
          'country' => set_value('country'),
          'postcode' => set_value('postcode'),
          // 'phone_code' => set_value('phone_code'),
          'primary_phone' => set_value('primary_phone'),
          'alternative_phone' => set_value('alternative_phone')
      );
	
      if ($newID = $this->mBooka->save($form_data)) {
        //$this->session->set_flashdata('message', 'You can now complete your profile.');
        redirect('/booka/step2/' . $newID);
      } else {
        $this->session->set_flashdata('error', 'An error occurred saving your information. Please try again later');

        $data = array(
            'title' => 'Create Profile Step 1',
            'main_content' => 'booka/step1'
        );
		
        $this->load->view('template', $data);
      }
    }
  }




  public function step2($id=0) {
   if (!$id) {
      $this->session->set_flashdata('error', 'You have to resigter first.');
      redirect('/Booka/register');
    }
   $this->form_validation->set_rules('payment_method', 'Payment Method', 'required');
   
   if ($this->input->post('payment_method') == 1) {
    $this->form_validation->set_rules('paypal_email', 'Paypal Email', 'required|valid_email');
   } else {
	   $this->form_validation->set_rules('paypal_email', 'Paypal Email', '');
   }
    
    $this->form_validation->set_error_delimiters('<div class="error">', '</div>');

    if ($this->form_validation->run() == FALSE) {
      $data = array(
          'title' => 'Create Booka Profile Step 2',
          'main_content' => 'booka/step2'
      );
      $data['form_errors'] = $this->form_validation->error_array();
	  $data = array_merge($data, (array) $this->mBooka->get($id));
	  if (empty($data['id'])) {
		  $this->session->set_flashdata('error', 'Profile does not exist - please try again.');
		  redirect('/booka/register');
	  }
	
      $this->load->view('template', $data);
    } else {
      $form_data = array(
	  	  'id' => $id,
          'payment_method' => set_value('payment_method'),
          'paypal_email' => set_value('paypal_email'),
          
		);
      if ($newID = $this->mBooka->save($form_data)) {
		echo '<div style="display:none;">'; print_r($this->input->post('save')); echo '</div>';
		if ($this->input->post('save')) {
        	redirect('/booka/step3/' . $newID);
		} else {
			redirect('/booka/step2/' . $newID);
		}
      
	  } else {
        $this->session->set_flashdata('error', 'An error occurred saving your information. Please try again later');

        $data = array(
          'title' => 'Create Booka Profile Step 2',
          'main_content' => 'booka/step2'
        );
		
        $this->load->view('template', $data);
      }
    }
  }

  public function step3($id=0) {
	if (!$id) {
      $this->session->set_flashdata('error', 'You have to resigter first.');
      redirect('/booka/register');
    }
    $data = array(
        'title' => '',
        'main_content' => 'booka/step3',
		'id' => $id
    );
	
    $this->load->view('template', $data);
  }
  
  public function create_new($id) {
	  if (!$id) {
      $this->session->set_flashdata('error', 'You have to resigter first.');
      redirect('/Booka/register');
    }
	
	$Booka = $this->mBooka->get($id);
	  if (!isset($Booka->id) || !$Booka->id) {
		  $this->session->set_flashdata('error', 'You have to resigter first.');
		  redirect('/Booka/register');
	  }
	  
	$ins['id'] = 0;
	$ins['user_id'] = $Booka->user_id ;
	$ins['first_name'] = $Booka->first_name ;
	$ins['last_name'] = $Booka->last_name ;
	$ins['address'] = $Booka->address ;
	$ins['suburb'] = $Booka->suburb ;
	$ins['state'] = $Booka->state ;
	$ins['country'] = $Booka->country ;
	$ins['postcode'] = $Booka->postcode ;
	$ins['phone_code'] = $Booka->phone_code ;
	$ins['phone_number'] = $Booka->phone_number ;
	$ins['phone_alternate'] = $Booka->phone_alternate ;
	$ins['gender'] = $Booka->gender ;
	  
	$aid = $this->mBooka->save($ins);
	redirect('/Booka/step1/'.$aid);
  }
	function manage_profile($id){
	if (!$id) {
	  $this->session->set_flashdata('error', 'You have to resigter first.');
	  redirect('/booka/register');
	}
	 $data = array(
		  'title' => 'Manage Profiles',
		  'main_content' => 'booka/manage_profile'
	  );
	$r = $this->db->query("SELECT a.id as id, u.email from booka a, user u WHERE a.id='{$id}' AND a.user_id=u.id");
	$artist=($r->result_array());
	$email=$artist[0]['email'];

	$data['other_profiles']=$this->mBooka->other_profile($email);
	// echo '<pre style="display:none;">';print_r($data);echo '</pre>';
	$booka=($r->result_array());
	$this->load->view('template', $data);
	}
  function personal_info($id){
		if (!$id) {
		$this->session->set_flashdata('error', 'You have to resigter first.');
		redirect('/artist/register');
		}
		$this->form_validation->set_rules('first_name', 'First Name', 'required|trim');
		$this->form_validation->set_rules('last_name', 'Last Name', 'required|trim');
		$this->form_validation->set_rules('secret_answer', 'Secret Answer', 'required');
			
		if ($this->form_validation->run() == FALSE) {
		$data = array(
		'title' => 'Personal Information',
		'main_content' => 'booka/personal_info'
		);
		$data['form_errors'] = $this->form_validation->error_array();
		$questions = $this->mUtil->getCodes('Secret Questions');
		  foreach ($questions as $s) {
			$data['questions'][$s] = $s;  
		  }
		$sql = "select booka.*,usr.* from booka LEFT JOIN user usr ON usr.id = booka.user_id where booka.id = '{$id}' ";
		$query = $this->db->query($sql);
		$data['personal'] = ($query->result_array());
		#echo '<pre style="display:none;">';print_r($data);echo '</pre>';
		
		$this->load->view('template', $data);
		} else {
		#echo '<pre style="display:none;">';print_r($_POST);echo '</pre>';
		$this->session->set_flashdata('message', 'You have updated successfully.');
		$dob=$_POST['dob_year'].'-'.$_POST['dob_month'].'-'.$_POST['dob_day'];
		
		$updatesql ="UPDATE `booka` a, user u SET a.`firstname` = '{$_POST['first_name']}', a.`lastname` = '{$_POST['last_name']}', u.dob='{$dob}', u.secret_answer='{$_POST['secret_answer']}', u.secret_question='{$_POST['secret_question']}' ";
		if($_POST['password1']!='') $updatesql.=", u.password='{$_POST['password1']}'";
		$updatesql.=" WHERE a.`id` ='{$id}' && a.user_id=u.id";		
		
		$this->db->query($updatesql);
		redirect('/booka/personal_info/'.$id);
		}
	  }
	
	function manage_gig($id){
	if (!$id) {
	  $this->session->set_flashdata('error', 'You have to resigter first.');
	  redirect('/booka/register');
	}
	 $data = array(
		  'title' => 'Manage Gigs',
		  'main_content' => 'booka/manage_gig'
	  );
	$r = $this->db->query("SELECT * FROM manage_gigs WHERE booka_id='{$id}'");
	$data['gigs']=$r->result_array();
	$bid=array(0);
	if(count($data['gigs'])>0) foreach($data['gigs'] as $v) $bid[]=$v['gig_id'];
	$bid=implode(',',$bid);
	$q = $this->db->query("SELECT *, ag.id AS agid, a.id AS aid FROM artist_gig_map ag
							LEFT JOIN artist a ON ag.artist_id=a.id
							LEFT JOIN artist_type at ON at.artist_id=a.profile_type
							WHERE ag.gig_id IN ({$bid}) ORDER BY position");
	
	$map_artists=$q->result_array();
	
	if(count($map_artists)>0) {
		foreach($map_artists as $val){
			$data['map_artists'][$val['gig_id']][$val['agid']]['profile_name']=$val['profile_name'];
			$data['map_artists'][$val['gig_id']][$val['agid']]['offered_date']=$val['offered_date'];
			$data['map_artists'][$val['gig_id']][$val['agid']]['type']=$val['type'];
			$data['map_artists'][$val['gig_id']][$val['agid']]['artist_id']=$val['aid'];
			if($val['respond']!=1)	
			{
				$data['map_artists'][$val['gig_id']][$val['agid']]['status']=$val['offer_status'];
			}
			else 
			{ 
				$data['map_artists'][$val['gig_id']][$val['agid']]['status']=$val['respond_status'];			
			}
			//$data['map_artists'][$val['gig_id']][$val['agid']]['status']=$val['offer_status'];
			echo '<div style="display:none;">arun';print_r($val['respond_status']);echo '</div>';
			if($val['offer_status']=='Confirm' || $val['respond_status']=='Accepted') 
			$data['gig_test'][$val['gig_id']]=1;
		}	
	}
	
	$data['id']=$id;
	$this->load->view('template', $data);
	} 
  function check_profile($email){
	if($email=='') { return false; }
	$other_profiles=$this->mBooka->other_profile($email);	  
	if(sizeof($other_profiles)>0) {
		$this->form_validation->set_message('check_profile', 'This email is already registered. Login to edit or add more profiles.');
		return false;
	}
	else return true;
  }
  
  function gig_profile($id=0,$profile_id=0) {

	if (!$id) {
      $this->session->set_flashdata('error', 'You have to resigter first.');
      redirect('/booak/register');
    }
	
	if($profile_id>0) $gig_profile=$this->mBooka->get_gig_profile($profile_id);
	
	// $data['allgenres']=$this->mArtist->allgenres();
		if(!empty($_POST)){
			if(!empty($_POST['existing_gigname'])) { $data['gig_name']=$_POST['gig_name']=$_POST['existing_gigname']; }
			$this->form_validation->set_rules('gig_name', 'Gig Name', 'required|trim');
			$this->form_validation->set_rules('start_date', 'Start Date', 'required|trim');
			$this->form_validation->set_rules('start_time', 'Start Time', '');
			$this->form_validation->set_rules('end_date', 'End Date', 'required|trim');
			$this->form_validation->set_rules('end_time', 'End Time', '');
			$this->form_validation->set_rules('artist_type', 'Artist Type', 'required|trim');
			$this->form_validation->set_rules('genre', 'Genre', 'required');
			$this->form_validation->set_rules('address', 'Address', 'required|trim');
			$this->form_validation->set_rules('country', 'Country', 'required|trim');
			$this->form_validation->set_rules('state', 'State', 'required|trim');
			$this->form_validation->set_rules('suburb', 'Suburb', 'required|trim');
			$this->form_validation->set_rules('active', 'Active', '');
			$this->form_validation->set_rules('existing_gigname', 'existing_gigname', '');

			$this->form_validation->set_error_delimiters('<div class="error">', '</div>');
		}
		if ($this->form_validation->run() == FALSE) {
			$data = array(
				'title' => 'Create Gig Profile',
				'main_content' => 'booka/gig_profile'
			);
		if(!empty($_POST['existing_gigname'])) { $data['gig_name']=$_POST['gig_name']=$_POST['existing_gigname']; }
		$data['form_errors'] = $this->form_validation->error_array();
		$q=$this->db->get_where('artist_type',array('active'=>1));
		$atype=$q->result_array();
		foreach($atype as $v) $types[$v['artist_id']]=$v['type'];
		$data['types']=$types;
		if($profile_id>0) { 
			$data = array_merge($data, (array) $this->mBooka->get_gig_profile($profile_id));
			$data['profile_id']=$profile_id;
			$data['status']=set_value('status');
			$data['start_time']=substr($data['start_time'],0,2);
			$data['end_time']=substr($data['end_time'],0,2);
		}
		$e1 = $this->db->query("SELECT DISTINCT(gig_name) FROM manage_gigs");
		$e=$e1->result_array();
		$data['existing_gigname']=array('Select Gig Name');
		foreach($e as $v){
			$data['existing_gigname'][$v['gig_name']]=$v['gig_name'];
		}
		$data['countries'] = $this->mUtil->getCountryList();
		$data['states'] = $this->mUtil->getStateList(set_value('country', @$data['country']));
		$data['time']=array('00','01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24');
		
		
	  //print_r($data);die;
      $this->load->view('template', $data);
    } else {
		
		$s=explode('/',set_value('start_date'));
		$start_date=$s[2].'-'.$s[1].'-'.$s[0];
		$s=explode('/',set_value('end_date'));
		$end_date=$s[2].'-'.$s[1].'-'.$s[0];
		$start_time=set_value('start_time').':00:00';
		$end_time=set_value('end_time').':00:00';
      $form_data = array(
          'gig_name' => set_value('gig_name'),
		  'event_name' => $_POST['event_name'],
		  'booka_id' => $id,
		  'start_date' => $start_date,
		  'start_time' => $start_time,
		  'end_date' => $end_date,
		  'end_time' => $end_time,
		  'artist_type' => set_value('artist_type'),
		  'country' => set_value('country'),
		  'state' => set_value('state'),
		  'suburb' => set_value('suburb'),
          'genre' => implode(',',$_POST['genre']),
          'address' => $this->input->post('address'),
      );
	  if($profile_id>0) $form_data['gig_id']=$profile_id;
      if ($newID = $this->mBooka->save_manage_gigs($form_data)) {
        redirect('/booka/manage_gig/' . $id);
      } else {
        $this->session->set_flashdata('error', 'An error occurred saving your information. Please try again later');

        $data = array(
            'title' => 'Create Gig Profile',
            'main_content' => 'booka/gig_profile'
        );
		
        $this->load->view('template', $data);
      }
    }
  }
  
    public function view($id=0) {
	
	if (!$id) {
      $this->session->set_flashdata('error', 'You have to resigter first.');
      redirect('/booak/register');
    }
   
      $data = array(
          'title' => 'View Gig Profile',
          'main_content' => 'booka/view'
      );
      
      $data = array_merge($data, (array) $this->mBooka->get($id));
	  if (empty($data['id'])) {
		  $this->session->set_flashdata('error', 'Profile does not exist - please try again.');
		  redirect('/booka/register');
	  }

      $data['countries'] = $this->mUtil->getCountryList();
	  $data['states'] = $this->mUtil->getStateList(set_value('country', $data['country']));
	  $data['genders'] = $this->mUtil->getCodes('gender');
	
      //print_r($data);die;
      $this->load->view('template', $data);
     
    }
	function manage_favourite($id=0){
		$data = array(
		  'title' => 'Manage Favourites',
		  'main_content' => 'booka/manage_favourite'
		);
		$data['types'] = $this->mUtil->getProfileTypeList();
		$q=$this->db->query("SELECT *,mf.status AS fstatus FROM manage_favourite mf, artist a WHERE a.id=mf.artist_id");
		$data['favourites']=$q->result_array();
		$this->load->view('template', $data);
	}
	
	function histroy($id){
		$data = array(
		  'title' => 'Gig Artist History',
		  'id' => $id
		  //'main_content' => 'booka/manage_favourite'
		);
		
		$sql = "SELECT *, ag.id AS agid, ag.gig_id AS gig_map_id FROM artist_gig_map ag
							LEFT JOIN artist a ON ag.artist_id=a.id
							LEFT JOIN artist_type at ON at.artist_id=a.profile_type
							LEFT JOIN gig_histroy histroy ON histroy.gig_id = ag.id
							WHERE ag.id = {$id}  ORDER BY position";
		
		$q = $this->db->query($sql);
	
		$data['artists_histroy'] = $q->result_array();
		$this->load->view('histroy', $data);
		
	}

}